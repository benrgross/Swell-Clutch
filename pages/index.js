import React, { useState, useEffect } from "react";
import { useStoreContext } from "../utils/GlobalState";
import { SET_LOCATION, LOCATION_STATUS } from "../utils/Actions";
import { signIn, signOut, useSession } from "next-auth/client";
import Head from "next/head";

import styles from "../styles/Home.module.css";

export default function Home() {
  const [session, loading] = useSession();
  const [lat, setLat] = useState(null);
  const [lng, setLng] = useState(null);
  const [state, dispatch] = useStoreContext();

  useEffect(() => {
    if (!navigator.geolocation) {
      dispatch({
        type: LOCATION_STATUS,
        status: "Geolocation is not supported by your browser",
      });
    } else {
      dispatch({
        type: LOCATION_STATUS,
        status: "Locating...",
      });

      navigator.geolocation.getCurrentPosition(
        (position) => {
          dispatch({
            type: SET_LOCATION,
            lat: position.coords.latitude,
            lon: position.coords.longitude,
          });
        },
        () => {
          dispatch({
            type: LOCATION_STATUS,
            status: "Unable to retrieve your location",
          });
        }
      );
    }
  }, []);
  const getLocation = () => {
    if (!navigator.geolocation) {
      setStatus("Geolocation is not supported by your browser");
    } else {
      setStatus("Locating...");
      navigator.geolocation.getCurrentPosition(
        (position) => {
          setStatus(null);
          setLat(position.coords.latitude);
          setLng(position.coords.longitude);
        },
        () => {
          setStatus("Unable to retrieve your location");
        }
      );
    }
  };
  let date = new Date();
  let timeStamp = date.toISOString();
  console.log(timeStamp);

  console.log(lat, lng);

  if (session) {
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {!session && (
          <>
            not signed in <button onClick={signIn}>Sign In</button>{" "}
          </>
        )}
        {session && (
          <>
            signed in as {session.user.email} <br />
            <div>You can now access swell Clutch</div>
            <div>{status}</div>
            <button onClick={getLocation}>Get Location</button>
          </>
        )}
      </main>
    </div>
  );
}

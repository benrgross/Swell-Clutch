{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/CurrentSwell.js\";\nimport React, { useEffect } from \"react\";\nimport { TIDE } from \"../utils/Actions\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction CurrentSwell() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    swell_current\n  } = state.swell;\n  const {\n    tides\n  } = state;\n  useEffect(() => {\n    if (swell_current.wind === \"\") {\n      dispatch({\n        type: TIDE,\n        tide: \"select a surf spot\"\n      });\n    } else {\n      // setting time to compare to tide chart\n      let date = new Date();\n      let options = {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true\n      };\n      let timeString = date.toLocaleString(\"en-US\");\n      console.log(timeString); // add algo to get current tide trend, add dispatch and set in state\n    }\n  }, [swell_current]);\n  console.log(\"state\", swell_current, tides);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"wind: \", swell_current.wind]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"primary swell: \", swell_current.primarySwell]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"secondary swell: \", swell_current.secondarySwell]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"am low tide: \", tides.low.am_low_time, \" @ \", tides.low.am_low_ft, \"ft\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"pm low tide: \", tides.low.pm_low_time, \" @ \", tides.low.pm_low_ft, \"ft\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"am high tide: \", tides.high.am_high_time, \" @ \", tides.high.am_high_ft, \"ft\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"am high tide: \", tides.high.pm_high_time, \" @ \", tides.high.pm_high_ft, \"ft\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\nexport default CurrentSwell;","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/CurrentSwell.js"],"names":["React","useEffect","TIDE","useStoreContext","CurrentSwell","state","dispatch","swell_current","swell","tides","wind","type","tide","date","Date","options","hour","minute","hour12","timeString","toLocaleString","console","log","primarySwell","secondarySwell","low","am_low_time","am_low_ft","pm_low_time","pm_low_ft","high","am_high_time","am_high_ft","pm_high_time","pm_high_ft"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,eAAe,EAAzC;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAoBF,KAAK,CAACG,KAAhC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,KAAlB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,aAAa,CAACG,IAAd,KAAuB,EAA3B,EAA+B;AAC7BJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAET,IADC;AAEPU,QAAAA,IAAI,EAAE;AAFC,OAAD,CAAR;AAID,KALD,MAKO;AACL;AACA,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE,SADM;AAEZC,QAAAA,MAAM,EAAE,SAFI;AAGZC,QAAAA,MAAM,EAAE;AAHI,OAAd;AAKA,UAAIC,UAAU,GAAGN,IAAI,CAACO,cAAL,CAAoB,OAApB,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EATK,CAWL;AACD;AACF,GAnBQ,EAmBN,CAACZ,aAAD,CAnBM,CAAT;AAqBAc,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBf,aAArB,EAAoCE,KAApC;AAEA,sBACE;AAAA,4BACE;AAAA,2BAAUF,aAAa,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,oCAAmBH,aAAa,CAACgB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,sCAAqBhB,aAAa,CAACiB,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,kCACgBf,KAAK,CAACgB,GAAN,CAAUC,WAD1B,SAC0CjB,KAAK,CAACgB,GAAN,CAAUE,SADpD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,kCACgBlB,KAAK,CAACgB,GAAN,CAAUG,WAD1B,SAC0CnB,KAAK,CAACgB,GAAN,CAAUI,SADpD,QACiE,GADjE;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAA,mCACiBpB,KAAK,CAACqB,IAAN,CAAWC,YAD5B,SAC6CtB,KAAK,CAACqB,IAAN,CAAWE,UADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE;AAAA,mCACiBvB,KAAK,CAACqB,IAAN,CAAWG,YAD5B,SAC6CxB,KAAK,CAACqB,IAAN,CAAWI,UADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;AAED,eAAe9B,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { TIDE } from \"../utils/Actions\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction CurrentSwell() {\n  const [state, dispatch] = useStoreContext();\n\n  const { swell_current } = state.swell;\n\n  const { tides } = state;\n\n  useEffect(() => {\n    if (swell_current.wind === \"\") {\n      dispatch({\n        type: TIDE,\n        tide: \"select a surf spot\",\n      });\n    } else {\n      // setting time to compare to tide chart\n      let date = new Date();\n      let options = {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      };\n      let timeString = date.toLocaleString(\"en-US\");\n      console.log(timeString);\n\n      // add algo to get current tide trend, add dispatch and set in state\n    }\n  }, [swell_current]);\n\n  console.log(\"state\", swell_current, tides);\n\n  return (\n    <div>\n      <p>wind: {swell_current.wind}</p>\n      <p>primary swell: {swell_current.primarySwell}</p>\n      <p>secondary swell: {swell_current.secondarySwell}</p>\n      <p>\n        am low tide: {tides.low.am_low_time} @ {tides.low.am_low_ft}ft\n      </p>\n      <p>\n        pm low tide: {tides.low.pm_low_time} @ {tides.low.pm_low_ft}ft{\" \"}\n      </p>\n      <p>\n        am high tide: {tides.high.am_high_time} @ {tides.high.am_high_ft}ft\n      </p>\n      <p>\n        am high tide: {tides.high.pm_high_time} @ {tides.high.pm_high_ft}ft\n      </p>\n    </div>\n  );\n}\n\nexport default CurrentSwell;\n"]},"metadata":{},"sourceType":"module"}
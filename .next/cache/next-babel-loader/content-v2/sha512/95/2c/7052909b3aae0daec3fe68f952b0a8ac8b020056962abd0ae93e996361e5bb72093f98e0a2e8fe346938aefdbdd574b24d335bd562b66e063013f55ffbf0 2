{"ast":null,"code":"const _excluded = [\"value\"];\nvar _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/utils/GlobalState.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer, createContext, useContext } from \"react\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = StoreContext;\nimport { LOCATION_STATUS, SET_LOCATION, REGION, REGION2, REGION3, CURRENT_SWELL, SEARCHSPOT, SET_USER, DISPLAYSPOT, SELECTED_SPOT, SIGNED_URL, IMAGE_KEY } from \"../utils/Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOCATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        location: {\n          lat: action.lat,\n          lon: action.lon\n        }\n      });\n\n    case LOCATION_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        locationStatus: action.status\n      });\n\n    case REGION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        region: action.region\n      });\n\n    case REGION2:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        region2: action.region\n      });\n\n    case REGION3:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        region3: action.region\n      });\n\n    case REGION3:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        show_current_swell: action.show_swell\n      });\n\n    case CURRENT_SWELL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        spotId: action.swellObject.spotId,\n        spotName: action.swellObject.spotName,\n        currentTide: action.swellObject.currentTide,\n        swells: action.swellObject.swells,\n        surf: action.swellObject.surf,\n        currentWind: action.swellObject.currentWind\n      });\n\n    case SEARCHSPOT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchSpots: action.spots\n      });\n\n    case SET_USER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: action.email\n        });\n      }\n\n    case SELECTED_SPOT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displaySpot: false,\n          selectedSpot: action.spot\n        });\n      }\n\n    case SIGNED_URL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signedURl: action.signedURl\n        });\n      }\n\n    case IMAGE_KEY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          imageKey: action.key\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = _ref => {\n  let {\n    value = []\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, {\n    location: {\n      lon: 0,\n      lat: 0\n    },\n    searchSpots: [],\n    locationStatus: \"\",\n    timeStamp: \"\",\n    spotId: \"\",\n    spotName: \"\",\n    swell: {\n      swell_current: {\n        wind: \"\",\n        primarySwell: \"\",\n        secondarySwell: \"\"\n      }\n    },\n    currentTide: {\n      height: 0,\n      status: \"null\"\n    },\n    surf: {\n      min: 0,\n      max: 0,\n      optimalScore: 0\n    },\n    currentWind: {\n      timeStamp: 0,\n      speed: 0,\n      direction: 0,\n      gust: 0\n    },\n    tides: {\n      low: {\n        am_low_time: \"\",\n        am_low_ft: \"\",\n        pm_low_time: \"\",\n        pm_low_ft: \"\"\n      },\n      high: {\n        am_high_time: \"\",\n        am_high_ft: \"\",\n        pm_high_time: \"\",\n        pm_high_ft: \"\"\n      }\n    },\n    swells: [],\n    show_current_swell: false,\n    region: \"select\",\n    region2: \"select\",\n    region3: \"select\",\n    currentTide: \"\",\n    email: \"\",\n    displaySpot: true,\n    selectedSpot: \"\",\n    imageKey: \"\",\n    signedURl: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, _objectSpread({\n    value: [state, dispatch]\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 10\n  }, this);\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/utils/GlobalState.js"],"names":["React","useReducer","createContext","useContext","StoreContext","Provider","LOCATION_STATUS","SET_LOCATION","REGION","REGION2","REGION3","CURRENT_SWELL","SEARCHSPOT","SET_USER","DISPLAYSPOT","SELECTED_SPOT","SIGNED_URL","IMAGE_KEY","reducer","state","action","type","location","lat","lon","locationStatus","status","region","region2","region3","show_current_swell","show_swell","spotId","swellObject","spotName","currentTide","swells","surf","currentWind","searchSpots","spots","user","email","displaySpot","selectedSpot","spot","signedURl","imageKey","key","StoreProvider","value","props","dispatch","timeStamp","swell","swell_current","wind","primarySwell","secondarySwell","height","min","max","optimalScore","speed","direction","gust","tides","low","am_low_time","am_low_ft","pm_low_time","pm_low_ft","high","am_high_time","am_high_ft","pm_high_time","pm_high_ft","useStoreContext"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useContext } from \"react\";\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\nimport {\n  LOCATION_STATUS,\n  SET_LOCATION,\n  REGION,\n  REGION2,\n  REGION3,\n  CURRENT_SWELL,\n  SEARCHSPOT,\n  SET_USER,\n  DISPLAYSPOT,\n  SELECTED_SPOT,\n  SIGNED_URL,\n  IMAGE_KEY,\n} from \"../utils/Actions\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOCATION:\n      return {\n        ...state,\n        location: {\n          lat: action.lat,\n          lon: action.lon,\n        },\n      };\n    case LOCATION_STATUS:\n      return {\n        ...state,\n        locationStatus: action.status,\n      };\n    case REGION:\n      return {\n        ...state,\n        region: action.region,\n      };\n    case REGION2:\n      return {\n        ...state,\n        region2: action.region,\n      };\n    case REGION3:\n      return {\n        ...state,\n        region3: action.region,\n      };\n    case REGION3:\n      return {\n        ...state,\n        show_current_swell: action.show_swell,\n      };\n    case CURRENT_SWELL:\n      return {\n        ...state,\n        spotId: action.swellObject.spotId,\n        spotName: action.swellObject.spotName,\n        currentTide: action.swellObject.currentTide,\n        swells: action.swellObject.swells,\n        surf: action.swellObject.surf,\n        currentWind: action.swellObject.currentWind,\n      };\n    case SEARCHSPOT:\n      return {\n        ...state,\n        searchSpots: action.spots,\n      };\n    case SET_USER: {\n      return {\n        ...state,\n        user: action.email,\n      };\n    }\n    case SELECTED_SPOT: {\n      return {\n        ...state,\n        displaySpot: false,\n        selectedSpot: action.spot,\n      };\n    }\n    case SIGNED_URL: {\n      return {\n        ...state,\n        signedURl: action.signedURl,\n      };\n    }\n    case IMAGE_KEY: {\n      return {\n        ...state,\n        imageKey: action.key,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    location: {\n      lon: 0,\n      lat: 0,\n    },\n    searchSpots: [],\n    locationStatus: \"\",\n    timeStamp: \"\",\n    spotId: \"\",\n    spotName: \"\",\n    swell: {\n      swell_current: {\n        wind: \"\",\n        primarySwell: \"\",\n        secondarySwell: \"\",\n      },\n    },\n    currentTide: {\n      height: 0,\n      status: \"null\",\n    },\n    surf: {\n      min: 0,\n      max: 0,\n      optimalScore: 0,\n    },\n    currentWind: {\n      timeStamp: 0,\n      speed: 0,\n      direction: 0,\n      gust: 0,\n    },\n    tides: {\n      low: {\n        am_low_time: \"\",\n        am_low_ft: \"\",\n        pm_low_time: \"\",\n        pm_low_ft: \"\",\n      },\n      high: {\n        am_high_time: \"\",\n        am_high_ft: \"\",\n        pm_high_time: \"\",\n        pm_high_ft: \"\",\n      },\n    },\n    swells: [],\n    show_current_swell: false,\n    region: \"select\",\n    region2: \"select\",\n    region3: \"select\",\n    currentTide: \"\",\n    email: \"\",\n    displaySpot: true,\n    selectedSpot: \"\",\n    imageKey: \"\",\n    signedURl: \"\",\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}
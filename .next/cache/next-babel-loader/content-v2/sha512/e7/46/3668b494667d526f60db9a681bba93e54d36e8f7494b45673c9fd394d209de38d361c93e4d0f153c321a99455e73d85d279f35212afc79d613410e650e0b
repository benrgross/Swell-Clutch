{"ast":null,"code":"import { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/pages/SavedSwells.js\";\nimport React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport { getSession, useSession } from \"next-auth/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport SavedSwellCard from \"../components/SavedSwellCard\";\nimport prisma from \"../lib/prisma\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SavedSwells(props) {\n  props.swellArr[0].map(swell => {\n    swell.createdAt.toString();\n  });\n  console.log(props.swellArr[0][1].createdAt.toISOString()());\n  const swells = props.swellArr[0];\n  const {\n    data: session\n  } = useSession();\n  const [state, dispatch] = useStoreContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getServerSideProps = _withSuperJSONProps(async function getServerSideProps(context) {\n  const session = await getSession(context);\n  const swells = await prisma.swell.findMany({\n    where: {\n      id: {\n        equals: session.user.id,\n        mode: \"insensitive\"\n      }\n    }\n  });\n  const swellObj = {\n    swellArr: []\n  };\n  swells.map(swell => {\n    swell.createdAt.toISOString(), swell.updatedAt.toISOString();\n  });\n  swellObj.swellArr.push(swells);\n  return {\n    props: swellObj\n  };\n}, [\"superJsonSkipped\"]);\nexport default _withSuperJSONPage(SavedSwells);","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/pages/SavedSwells.js"],"names":["React","GetServerSideProps","getSession","useSession","useStoreContext","SavedSwellCard","prisma","SavedSwells","props","swellArr","map","swell","createdAt","toString","console","log","toISOString","swells","data","session","state","dispatch","getServerSideProps","context","findMany","where","id","equals","user","mode","swellObj","updatedAt","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BA,EAAAA,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAhB;AACD,GAFD;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqBG,SAArB,CAA+BI,WAA/B,IAAZ;AAEA,QAAMC,MAAM,GAAGT,KAAK,CAACC,QAAN,CAAe,CAAf,CAAf;AACA,QAAM;AAAES,IAAAA,IAAI,EAAEC;AAAR,MAAoBhB,UAAU,EAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBjB,eAAe,EAAzC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;AAED,aAAsBkB,kBAAtB,sCAAsBA,kBAAtB,CAAyCC,OAAzC,EAAkD;AAChD,QAAMJ,OAAO,GAAG,MAAMjB,UAAU,CAACqB,OAAD,CAAhC;AAEA,QAAMN,MAAM,GAAG,MAAMX,MAAM,CAACK,KAAP,CAAaa,QAAb,CAAsB;AACzCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,MAAM,EAAER,OAAO,CAACS,IAAR,CAAaF,EAAvB;AAA2BG,QAAAA,IAAI,EAAE;AAAjC;AADC;AADkC,GAAtB,CAArB;AAMA,QAAMC,QAAQ,GAAG;AACfrB,IAAAA,QAAQ,EAAE;AADK,GAAjB;AAIAQ,EAAAA,MAAM,CAACP,GAAP,CAAYC,KAAD,IAAW;AACpBA,IAAAA,KAAK,CAACC,SAAN,CAAgBI,WAAhB,IAA+BL,KAAK,CAACoB,SAAN,CAAgBf,WAAhB,EAA/B;AACD,GAFD;AAIAc,EAAAA,QAAQ,CAACrB,QAAT,CAAkBuB,IAAlB,CAAuBf,MAAvB;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAEsB;AADF,GAAP;AAGD,CAtBD;AAwBA,kCAAevB,WAAf","sourcesContent":["import React from \"react\";\n\nimport { GetServerSideProps } from \"next\";\nimport { getSession, useSession } from \"next-auth/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport SavedSwellCard from \"../components/SavedSwellCard\";\nimport prisma from \"../lib/prisma\";\n\nfunction SavedSwells(props) {\n  props.swellArr[0].map((swell) => {\n    swell.createdAt.toString();\n  });\n  console.log(props.swellArr[0][1].createdAt.toISOString()());\n\n  const swells = props.swellArr[0];\n  const { data: session } = useSession();\n  const [state, dispatch] = useStoreContext();\n  return (\n    <div>\n      {/* {swells.map(\n        (swell) => (\n          console.log(swell),\n          (\n            <SavedSwellCard\n              key={swell.spotId}\n              spotName={swell.spotName}\n              createdAt={swell.createdAt}\n              report={swell.report}\n              swell1={swell.swell1}\n              swell2={swell.swell2}\n              swell3={swell.swell3}\n              swell4={swell.swell4}\n              swell5={swell.swell5}\n              swell6={swell.swell6}\n              tide={swell.tide}\n              wind={swell.wind}\n              notes={swell.notes}\n            />\n          )\n        )\n      )} */}\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getSession(context);\n\n  const swells = await prisma.swell.findMany({\n    where: {\n      id: { equals: session.user.id, mode: \"insensitive\" },\n    },\n  });\n\n  const swellObj = {\n    swellArr: [],\n  };\n\n  swells.map((swell) => {\n    swell.createdAt.toISOString(), swell.updatedAt.toISOString();\n  });\n\n  swellObj.swellArr.push(swells);\n\n  return {\n    props: swellObj,\n  };\n}\n\nexport default SavedSwells;\n"]},"metadata":{},"sourceType":"module"}
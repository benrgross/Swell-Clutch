{"ast":null,"code":"var _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/CurrentSwell.js\";\nimport React, { useEffect } from \"react\";\nimport { server } from \"../config\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { useSession } from \"next-auth/client\";\nimport axios from \"axios\";\nimport { UsingJoinColumnIsNotAllowedError } from \"typeorm\";\nimport ImageUploader from \"./ImageUploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentSwell() {\n  // NOTES: add function to input notes and pictures.\n  const [state, dispatch] = useStoreContext();\n  const [session, loading] = useSession();\n  console.log(session);\n  const swellArr = [];\n  console.log(\"swellArr\", swellArr);\n  let windDir;\n  const {\n    swell_current\n  } = state.swell;\n  const {\n    tides\n  } = state;\n\n  const direction = (direction, height, period) => {\n    console.log(Math.round(direction));\n    let x = Number(Math.round(direction) / 22.5 + 0.5);\n    console.log(x);\n    let arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\n    let genDirrection = arr[Math.round(x % 16)];\n    swellArr.push(height + \"ft,\" + \" \" + direction + \"deg\" + \",\" + \" \" + \"@\" + period + \"s\");\n    return genDirrection;\n  }; // console.log(swellArr);\n\n\n  const surfHeight = (min, max) => {\n    if (max === min) {\n      return Math.round(min);\n    } else return min.toFixed(1) + \"-\" + max.toFixed(1);\n  };\n\n  const getWind = wind => {\n    let x = Math.round(wind.direction) / 22.5 + 0.5;\n    let arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\n    let genDirrection = arr[Math.round(x % 16)];\n    windDir = Math.round(wind.speed) + \"kts\" + \" \" + genDirrection;\n    return windDir;\n  };\n\n  const saveSwell = async () => {\n    let swellBody = {\n      spotName: state.spotName,\n      dateStr: new Date().toString(),\n      spotId: state.spotId,\n      wind: windDir,\n      tide: state.currentTide.height + \",\" + \" \" + state.currentTide.status,\n      report: `${state.surf.min} - ${state.surf.max}`\n    };\n    swellArr.map((swell, i) => {\n      swellBody[\"swell\" + (i + 1)] = swell;\n    });\n    console.log(\"swellBody\", swellBody);\n    const saveSwell = await axios.post(`${server}/api/saveSwell`, swellBody);\n    console.log(\"saveSwell\"); // algo get data object for storage, send to pisma to for save\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card col-lg-4 col-md-4 col-sm-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-header\",\n      children: \"Surf Reporst\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: state.spotName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"surf report: \", surfHeight(state.surf.min, state.surf.max), \"ft\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), state.swells.map((swell, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"swell \", index += 1, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [swell.height.toFixed(1), \"ft \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: direction(swell.direction, swell.height, swell.period)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" @\", swell.period, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"wind: \", getWind(state.currentWind)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"tide: \", state.currentTide.height, \"ft and \", state.currentTide.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveSwell(),\n        href: \"#\",\n        className: \"btn btn-primary\",\n        children: \"Save Swell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\nexport default CurrentSwell;","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/CurrentSwell.js"],"names":["React","useEffect","server","useStoreContext","useSession","axios","UsingJoinColumnIsNotAllowedError","ImageUploader","CurrentSwell","state","dispatch","session","loading","console","log","swellArr","windDir","swell_current","swell","tides","direction","height","period","Math","round","x","Number","arr","genDirrection","push","surfHeight","min","max","toFixed","getWind","wind","speed","saveSwell","swellBody","spotName","dateStr","Date","toString","spotId","tide","currentTide","status","report","surf","map","i","post","swells","index","currentWind"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { server } from \"../config\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { useSession } from \"next-auth/client\";\nimport axios from \"axios\";\nimport { UsingJoinColumnIsNotAllowedError } from \"typeorm\";\nimport ImageUploader from \"./ImageUploader\";\n\nfunction CurrentSwell() {\n  // NOTES: add function to input notes and pictures.\n\n  const [state, dispatch] = useStoreContext();\n  const [session, loading] = useSession();\n\n  console.log(session);\n\n  const swellArr = [];\n  console.log(\"swellArr\", swellArr);\n  let windDir;\n\n  const { swell_current } = state.swell;\n\n  const { tides } = state;\n\n  const direction = (direction, height, period) => {\n    console.log(Math.round(direction));\n    let x = Number(Math.round(direction) / 22.5 + 0.5);\n    console.log(x);\n    let arr = [\n      \"N\",\n      \"NNE\",\n      \"NE\",\n      \"ENE\",\n      \"E\",\n      \"ESE\",\n      \"SE\",\n      \"SSE\",\n      \"S\",\n      \"SSW\",\n      \"SW\",\n      \"WSW\",\n      \"W\",\n      \"WNW\",\n      \"NW\",\n      \"NNW\",\n    ];\n    let genDirrection = arr[Math.round(x % 16)];\n\n    swellArr.push(\n      height + \"ft,\" + \" \" + direction + \"deg\" + \",\" + \" \" + \"@\" + period + \"s\"\n    );\n\n    return genDirrection;\n  };\n\n  // console.log(swellArr);\n\n  const surfHeight = (min, max) => {\n    if (max === min) {\n      return Math.round(min);\n    } else return min.toFixed(1) + \"-\" + max.toFixed(1);\n  };\n\n  const getWind = (wind) => {\n    let x = Math.round(wind.direction) / 22.5 + 0.5;\n    let arr = [\n      \"N\",\n      \"NNE\",\n      \"NE\",\n      \"ENE\",\n      \"E\",\n      \"ESE\",\n      \"SE\",\n      \"SSE\",\n      \"S\",\n      \"SSW\",\n      \"SW\",\n      \"WSW\",\n      \"W\",\n      \"WNW\",\n      \"NW\",\n      \"NNW\",\n    ];\n\n    let genDirrection = arr[Math.round(x % 16)];\n    windDir = Math.round(wind.speed) + \"kts\" + \" \" + genDirrection;\n    return windDir;\n  };\n\n  const saveSwell = async () => {\n    let swellBody = {\n      spotName: state.spotName,\n      dateStr: new Date().toString(),\n      spotId: state.spotId,\n      wind: windDir,\n      tide: state.currentTide.height + \",\" + \" \" + state.currentTide.status,\n      report: `${state.surf.min} - ${state.surf.max}`,\n    };\n    swellArr.map((swell, i) => {\n      swellBody[\"swell\" + (i + 1)] = swell;\n    });\n\n    console.log(\"swellBody\", swellBody);\n\n    const saveSwell = await axios.post(`${server}/api/saveSwell`, swellBody);\n    console.log(\"saveSwell\");\n\n    // algo get data object for storage, send to pisma to for save\n  };\n\n  return (\n    <div className=\"card col-lg-4 col-md-4 col-sm-12\">\n      <h5 className=\"card-header\">Surf Reporst</h5>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{state.spotName}</h5>\n        <p>\n          <span>\n            surf report: {surfHeight(state.surf.min, state.surf.max)}ft\n          </span>\n          <span></span>\n        </p>\n        {state.swells.map((swell, index) => {\n          return (\n            <p key={index + 1} className=\"card-text\">\n              {\" \"}\n              <span>swell {(index += 1)}: </span>{\" \"}\n              <span>{swell.height.toFixed(1)}ft </span>\n              <span>\n                {direction(swell.direction, swell.height, swell.period)}\n              </span>\n              <span> @{swell.period}s</span>\n            </p>\n          );\n        })}\n        <p>\n          <span>wind: {getWind(state.currentWind)}</span>\n        </p>\n        <p>\n          <span>\n            tide: {state.currentTide.height}ft and {state.currentTide.status}\n          </span>\n        </p>\n        <ImageUploader />\n        <button\n          onClick={() => saveSwell()}\n          href=\"#\"\n          className=\"btn btn-primary\"\n        >\n          Save Swell\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentSwell;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/ImageUploader.js\",\n    _this = this;\n\nimport _regeneratorRuntime from \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport S3 from \"../lib/AWS\";\nimport axios from \"axios\";\nimport { server } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ImageUploader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var handleChangeStatus, handleSubmit;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            handleChangeStatus = function handleChangeStatus(_ref2, status) {\n              var meta = _ref2.meta,\n                  remove = _ref2.remove;\n              console.log(status, meta);\n            };\n\n            handleSubmit = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files) {\n                var _yield$axios$post, data;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return axios.post(\"\".concat(server, \"/api/getUploadImage\"), files);\n\n                      case 2:\n                        _yield$axios$post = _context.sent;\n                        data = _yield$axios$post.data;\n                        console.log(data); // // * GET request: presigned URL\n                        // const response = await axios.get(\n                        //   `https://11k2bj0e8j.execute-api.us-east-2.amazonaws.com/default/getPresignedImageURL`\n                        // );\n                        // console.log(\"Response: \", response);\n                        // // * PUT request: upload file to S3\n                        // // follow youtube for https://www.youtube.com/watch?v=V45ymCXBpUM\n                        // // movie call to api backend.\n                        // // use the S3 client\n                        // const result = await fetch(response.data.uploadURL, {\n                        //   method: \"PUT\",\n                        //   headers: {\n                        //     ContentType: \"image/jpeg, image/png, image/heic, mov/mp4\",\n                        //   },\n                        //   body: f[\"file\"],\n                        // });\n                        // console.log(\"Result: \", result);\n                        // const fileName = response.data.Key;\n                        // const params = {\n                        //   Bucket: \"swell-clutch\",\n                        //   Key: fileName,\n                        //   Expires: 7776000,\n                        // };\n                        // const signedURL = S3.getSignedUrl(\"getObject\", params);\n                        // console.log(\"url\", signedURL);\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function handleSubmit(_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            return _context2.abrupt(\"return\", /*#__PURE__*/_jsxDEV(Dropzone, {\n              onChangeStatus: handleChangeStatus,\n              onSubmit: handleSubmit,\n              hello: true,\n              maxFiles: 1,\n              multiple: false,\n              canCancel: false,\n              inputContent: \"Add A Photo\",\n              styles: {\n                dropzone: {\n                  width: 200,\n                  height: 10\n                },\n                dropzoneActive: {\n                  borderColor: \"green\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 5\n            }, _this));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function ImageUploader() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = ImageUploader;\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/ImageUploader.js"],"names":["Dropzone","S3","axios","server","ImageUploader","handleChangeStatus","status","meta","remove","console","log","handleSubmit","files","post","data","dropzone","width","height","dropzoneActive","borderColor"],"mappings":";;;;;;AAAA,OAAO,yCAAP;AACA,OAAOA,QAAP,MAAqB,yBAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,IAAMC,aAAa;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,kBADc,GACO,SAArBA,kBAAqB,QAAmBC,MAAnB,EAA8B;AAAA,kBAA3BC,IAA2B,SAA3BA,IAA2B;AAAA,kBAArBC,MAAqB,SAArBA,MAAqB;AACvDC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoBC,IAApB;AACD,aAHmB;;AAIdI,YAAAA,YAJc;AAAA,mFAIC,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACIV,KAAK,CAACW,IAAN,WAAcV,MAAd,0BAA2CS,KAA3C,CADJ;;AAAA;AAAA;AACXE,wBAAAA,IADW,qBACXA,IADW;AAEnBL,wBAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAFmB,CAInB;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAnCmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJD;;AAAA,8BAIdH,YAJc;AAAA;AAAA;AAAA;;AAAA,2DA2ClB,QAAC,QAAD;AACE,cAAA,cAAc,EAAEN,kBADlB;AAEE,cAAA,QAAQ,EAAEM,YAFZ;AAGE,cAAA,KAAK,MAHP;AAIE,cAAA,QAAQ,EAAE,CAJZ;AAKE,cAAA,QAAQ,EAAE,KALZ;AAME,cAAA,SAAS,EAAE,KANb;AAOE,cAAA,YAAY,EAAC,aAPf;AAQE,cAAA,MAAM,EAAE;AACNI,gBAAAA,QAAQ,EAAE;AAAEC,kBAAAA,KAAK,EAAE,GAAT;AAAcC,kBAAAA,MAAM,EAAE;AAAtB,iBADJ;AAENC,gBAAAA,cAAc,EAAE;AAAEC,kBAAAA,WAAW,EAAE;AAAf;AAFV;AARV;AAAA;AAAA;AAAA;AAAA,qBA3CkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbf,aAAa;AAAA;AAAA;AAAA,GAAnB;;KAAMA,a;AA2DN,eAAeA,aAAf","sourcesContent":["import \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport S3 from \"../lib/AWS\";\nimport axios from \"axios\";\nimport { server } from \"../config\";\n\nconst ImageUploader = async () => {\n  const handleChangeStatus = ({ meta, remove }, status) => {\n    console.log(status, meta);\n  };\n  const handleSubmit = async (files) => {\n    const { data } = await axios.post(`${server}/api/getUploadImage`, files);\n    console.log(data);\n\n    // // * GET request: presigned URL\n    // const response = await axios.get(\n    //   `https://11k2bj0e8j.execute-api.us-east-2.amazonaws.com/default/getPresignedImageURL`\n    // );\n\n    // console.log(\"Response: \", response);\n\n    // // * PUT request: upload file to S3\n\n    // // follow youtube for https://www.youtube.com/watch?v=V45ymCXBpUM\n    // // movie call to api backend.\n    // // use the S3 client\n    // const result = await fetch(response.data.uploadURL, {\n    //   method: \"PUT\",\n    //   headers: {\n    //     ContentType: \"image/jpeg, image/png, image/heic, mov/mp4\",\n    //   },\n    //   body: f[\"file\"],\n    // });\n    // console.log(\"Result: \", result);\n\n    // const fileName = response.data.Key;\n\n    // const params = {\n    //   Bucket: \"swell-clutch\",\n    //   Key: fileName,\n    //   Expires: 7776000,\n    // };\n\n    // const signedURL = S3.getSignedUrl(\"getObject\", params);\n\n    // console.log(\"url\", signedURL);\n  };\n\n  return (\n    <Dropzone\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      hello\n      maxFiles={1}\n      multiple={false}\n      canCancel={false}\n      inputContent=\"Add A Photo\"\n      styles={{\n        dropzone: { width: 200, height: 10 },\n        dropzoneActive: { borderColor: \"green\" },\n      }}\n    />\n  );\n};\n\nexport default ImageUploader;\n"]},"metadata":{},"sourceType":"module"}
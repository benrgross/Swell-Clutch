{"ast":null,"code":"import _slicedToArray from \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\n\nvar _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/pages/SavedSwells.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport { useSession } from \"next-auth/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport DisplaySpot from \"../components/DisplaySpot\";\nimport SavedSwellCard from \"../components/SavedSwellCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SavedSwells(props) {\n  _s();\n\n  var _this = this;\n\n  var _useStoreContext = useStoreContext(),\n      _useStoreContext2 = _slicedToArray(_useStoreContext, 2),\n      state = _useStoreContext2[0],\n      dispatch = _useStoreContext2[1];\n\n  var swells = props.swellArr[0];\n  var filterdSwelss = swells.filter(function (swell) {\n    return swell.spotName != state.selectedSpot;\n  });\n  console.log(swells);\n  var spots = [];\n  swells.forEach(function (swell) {\n    return spots.push(swell.spotName);\n  });\n  console.log(spots);\n\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  var uniqueSpots = spots.filter(onlyUnique);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"savedCont\",\n    children: state.displaySpot ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(DisplaySpot, {\n        surfSpots: uniqueSpots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: swells.map(function (swell) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(SavedSwellCard, {\n            id: swell.id,\n            dateStr: swell.dateStr,\n            spotName: swell.spotName,\n            createdAt: swell.dateStr,\n            report: swell.report,\n            swell1: swell.swell1,\n            swell2: swell.swell2,\n            swell3: swell.swell3,\n            swell4: swell.swell4,\n            swell5: swell.swell5,\n            swell6: swell.swell6,\n            tide: swell.tide,\n            wind: swell.wind,\n            notes: swell.notes\n          }, swell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SavedSwells, \"qZ9GHftpIX86+oMFVfpp6r+956w=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = SavedSwells;\nexport var __N_SSP = true;\nexport default _c2 = _withSuperJSONPage(SavedSwells);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SavedSwells\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/pages/SavedSwells.js"],"names":["React","GetServerSideProps","useSession","useStoreContext","DisplaySpot","SavedSwellCard","SavedSwells","props","state","dispatch","swells","swellArr","filterdSwelss","filter","swell","spotName","selectedSpot","console","log","spots","forEach","push","onlyUnique","value","index","self","indexOf","uniqueSpots","displaySpot","map","id","dateStr","report","swell1","swell2","swell3","swell4","swell5","swell6","tide","wind","notes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAAqBC,UAArB,QAAuC,kBAAvC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AAC1B,yBAA0BJ,eAAe,EAAzC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,MAAM,GAAGH,KAAK,CAACI,QAAN,CAAe,CAAf,CAAf;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,MAAP,CACpB,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAN,IAAkBP,KAAK,CAACQ,YAAnC;AAAA,GADoB,CAAtB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,MAAMS,KAAK,GAAG,EAAd;AAEAT,EAAAA,MAAM,CAACU,OAAP,CAAe,UAACN,KAAD;AAAA,WAAWK,KAAK,CAACE,IAAN,CAAWP,KAAK,CAACC,QAAjB,CAAX;AAAA,GAAf;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AAEA,WAASG,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACtC,WAAOA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/B;AACD;;AAED,MAAMG,WAAW,GAAGR,KAAK,CAACN,MAAN,CAAaS,UAAb,CAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGd,KAAK,CAACoB,WAAN,gBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGjB,MAAM,CAACmB,GAAP,CAAW,UAACf,KAAD;AAAA,4BACV;AAAA,iCAEE,QAAC,cAAD;AAEE,YAAA,EAAE,EAAEA,KAAK,CAACgB,EAFZ;AAGE,YAAA,OAAO,EAAEhB,KAAK,CAACiB,OAHjB;AAIE,YAAA,QAAQ,EAAEjB,KAAK,CAACC,QAJlB;AAKE,YAAA,SAAS,EAAED,KAAK,CAACiB,OALnB;AAME,YAAA,MAAM,EAAEjB,KAAK,CAACkB,MANhB;AAOE,YAAA,MAAM,EAAElB,KAAK,CAACmB,MAPhB;AAQE,YAAA,MAAM,EAAEnB,KAAK,CAACoB,MARhB;AASE,YAAA,MAAM,EAAEpB,KAAK,CAACqB,MAThB;AAUE,YAAA,MAAM,EAAErB,KAAK,CAACsB,MAVhB;AAWE,YAAA,MAAM,EAAEtB,KAAK,CAACuB,MAXhB;AAYE,YAAA,MAAM,EAAEvB,KAAK,CAACwB,MAZhB;AAaE,YAAA,IAAI,EAAExB,KAAK,CAACyB,IAbd;AAcE,YAAA,IAAI,EAAEzB,KAAK,CAAC0B,IAdd;AAeE,YAAA,KAAK,EAAE1B,KAAK,CAAC2B;AAff,aACO3B,KAAK,CAACgB,EADb;AAAA;AAAA;AAAA;AAAA;AAFF,yBADU;AAAA,OAAX;AADH;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAtDQxB,W;UACmBH,e;;;KADnBG,W;;AAgFT,wCAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nimport { GetServerSideProps } from \"next\";\nimport { getSession, useSession } from \"next-auth/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport DisplaySpot from \"../components/DisplaySpot\";\nimport SavedSwellCard from \"../components/SavedSwellCard\";\nimport prisma from \"../lib/prisma\";\n\nfunction SavedSwells(props) {\n  const [state, dispatch] = useStoreContext();\n  const swells = props.swellArr[0];\n\n  const filterdSwelss = swells.filter(\n    (swell) => swell.spotName != state.selectedSpot\n  );\n\n  console.log(swells);\n  const spots = [];\n\n  swells.forEach((swell) => spots.push(swell.spotName));\n  console.log(spots);\n\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  const uniqueSpots = spots.filter(onlyUnique);\n\n  return (\n    <div className=\"savedCont\">\n      {state.displaySpot ? (\n        <div className=\"row\">\n          <DisplaySpot surfSpots={uniqueSpots} />\n        </div>\n      ) : (\n        <div className=\"row\">\n          {swells.map((swell) => (\n            <>\n              {/* <DisplaySpot /> */}\n              <SavedSwellCard\n                key={swell.id}\n                id={swell.id}\n                dateStr={swell.dateStr}\n                spotName={swell.spotName}\n                createdAt={swell.dateStr}\n                report={swell.report}\n                swell1={swell.swell1}\n                swell2={swell.swell2}\n                swell3={swell.swell3}\n                swell4={swell.swell4}\n                swell5={swell.swell5}\n                swell6={swell.swell6}\n                tide={swell.tide}\n                wind={swell.wind}\n                notes={swell.notes}\n              />\n            </>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getSession(context);\n\n  const swells = await prisma.swell.findMany({\n    where: {\n      id: { equals: session.user.id, mode: \"insensitive\" },\n    },\n  });\n\n  const swellObj = {\n    swellArr: [],\n  };\n\n  swells.map((swell) => {\n    swell.createdAt.toISOString(), swell.updatedAt.toISOString();\n  });\n\n  swellObj.swellArr.push(swells);\n\n  return {\n    props: swellObj,\n  };\n}\n\nexport default SavedSwells;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/ImageUploader.js\";\nimport _regeneratorRuntime from \"/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUploader() {\n  var handleChangeStatus = function handleChangeStatus(_ref, status) {\n    var meta = _ref.meta,\n        remove = _ref.remove;\n    console.log(status, meta);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files) {\n      var f, response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              f = files[0];\n              console.log(f[\"file\"]); // * GET request: presigned URL\n\n              _context.next = 4;\n              return axios({\n                method: \"GET\",\n                url: API_ENDPOINT\n              });\n\n            case 4:\n              response = _context.sent;\n              console.log(\"Response: \", response); // * PUT request: upload file to S3\n\n              _context.next = 8;\n              return fetch(response.data.uploadURL, {\n                method: \"PUT\",\n                body: f[\"file\"]\n              });\n\n            case 8:\n              result = _context.sent;\n              console.log(\"Result: \", result);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    onChangeStatus: handleChangeStatus,\n    onSubmit: handleSubmit,\n    hello: true,\n    maxFiles: 1,\n    multiple: false,\n    canCancel: false,\n    inputContent: \"Add A Photo\",\n    styles: {\n      dropzone: {\n        width: 200,\n        height: 50\n      },\n      dropzoneActive: {\n        borderColor: \"green\"\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ImageUploader;\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"sources":["/Users/bengross/Desktop/Swell Clutch/Swell-Clutch/components/ImageUploader.js"],"names":["Dropzone","ImageUploader","handleChangeStatus","status","meta","remove","console","log","handleSubmit","files","f","axios","method","url","API_ENDPOINT","response","fetch","data","uploadURL","body","result","dropzone","width","height","dropzoneActive","borderColor"],"mappings":";;;AAAA,OAAO,yCAAP;AACA,OAAOA,QAAP,MAAqB,yBAArB;;;AAEA,SAASC,aAAT,GAAyB;AACvB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAmBC,MAAnB,EAA8B;AAAA,QAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,MAAqB,QAArBA,MAAqB;AACvDC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoBC,IAApB;AACD,GAFD;;AAGA,MAAMI,YAAY;AAAA,yEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,CADa,GACTD,KAAK,CAAC,CAAD,CADI;AAEnBH,cAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAAC,MAAD,CAAb,EAFmB,CAGnB;;AAHmB;AAAA,qBAIIC,KAAK,CAAC;AAC3BC,gBAAAA,MAAM,EAAE,KADmB;AAE3BC,gBAAAA,GAAG,EAAEC;AAFsB,eAAD,CAJT;;AAAA;AAIbC,cAAAA,QAJa;AASnBT,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,QAA1B,EATmB,CAWnB;;AAXmB;AAAA,qBAYEC,KAAK,CAACD,QAAQ,CAACE,IAAT,CAAcC,SAAf,EAA0B;AAClDN,gBAAAA,MAAM,EAAE,KAD0C;AAElDO,gBAAAA,IAAI,EAAET,CAAC,CAAC,MAAD;AAF2C,eAA1B,CAZP;;AAAA;AAYbU,cAAAA,MAZa;AAgBnBd,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,MAAxB;;AAhBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZZ,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAmBA,sBACE,QAAC,QAAD;AACE,IAAA,cAAc,EAAEN,kBADlB;AAEE,IAAA,QAAQ,EAAEM,YAFZ;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,QAAQ,EAAE,CAJZ;AAKE,IAAA,QAAQ,EAAE,KALZ;AAME,IAAA,SAAS,EAAE,KANb;AAOE,IAAA,YAAY,EAAC,aAPf;AAQE,IAAA,MAAM,EAAE;AACNa,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADJ;AAENC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAFV;AARV;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAtCQxB,a;AAwCT,eAAeA,aAAf","sourcesContent":["import \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nfunction ImageUploader() {\n  const handleChangeStatus = ({ meta, remove }, status) => {\n    console.log(status, meta);\n  };\n  const handleSubmit = async (files) => {\n    const f = files[0];\n    console.log(f[\"file\"]);\n    // * GET request: presigned URL\n    const response = await axios({\n      method: \"GET\",\n      url: API_ENDPOINT,\n    });\n\n    console.log(\"Response: \", response);\n\n    // * PUT request: upload file to S3\n    const result = await fetch(response.data.uploadURL, {\n      method: \"PUT\",\n      body: f[\"file\"],\n    });\n    console.log(\"Result: \", result);\n  };\n\n  return (\n    <Dropzone\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      hello\n      maxFiles={1}\n      multiple={false}\n      canCancel={false}\n      inputContent=\"Add A Photo\"\n      styles={{\n        dropzone: { width: 200, height: 50 },\n        dropzoneActive: { borderColor: \"green\" },\n      }}\n    />\n  );\n}\n\nexport default ImageUploader;\n"]},"metadata":{},"sourceType":"module"}